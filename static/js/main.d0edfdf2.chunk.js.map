{"version":3,"sources":["components/Cell.jsx","components/Player.jsx","components/Gride.jsx","components/GameZone.jsx","components/MainMenu.jsx","components/ChoicePlayers.jsx","components/EndingGame.jsx","App.jsx","registerServiceWorker.js","index.js"],"names":["Cell","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleMouveOver","console","log","isMovable","handleClick","x","y","state","taken","setPlayerPostion","_this2","color","isAttackable","isHeal","isEntrave","react_default","a","createElement","className","onClick","setClickPosition","onMouseOver","style","top","left","backgroundColor","Component","Player","playerAttacked","index","playerHeal","playerEntrave","goodImage","nextPV","avatarTmp","avatar","isCurrentPlayer","avatarPlayer","pv","avatarEnd","avatarDamage","avatarHeal","goodSound","audio","Audio","src","play","handleSoundClick","soundTmp","infoPlayer","nextProps","setState","_this$props","event","showInfoPlayer","onMouseOut","hiddenInfoPlayer","backgroundImage","fontWeight","height","width","borderRadius","textAlign","margin","Gride","isWhiteZone","cell","obstacle","indexOf","whiteZone","minX","maxX","minY","maxY","handleMoveClick","setWhiteZone","players","currentPlayer","whiteZoneHeal","whiteZoneEntrave","whiteZoneAttack","handleAttackClick","setWhiteZoneAttack","handleHealClick","setWhiteZoneHeal","handleEntraveClick","setWhiteZoneEntrave","checkVictory","playersArray","playersAlive","filter","player","isDead","length","objectSpread","showEndGame","nextPlayer","playersTmp","pa","pm","nbPlayersToSkip","indexNPlus1","turnNum","countDownTour","isWhiteZoneAttack","isWhiteZoneHeal","isWhiteZoneEntrave","damage","usePa","deathPlayersTmp","deathPlayers","push","name","entrave","heal","useMove","playerNum","ndGame","InfoAttack","InfoHeal","setInterval","InfoEntrave","gridrow","gridcol","arr","i","j","src_components_Cell","key","Redirect","to","pathname","process","winner","createGrid","map","src_components_Player","reactstrap_es","houseBanner","alt","pseudoPlayer","sm","size","offset","showInfoAttack","hiddenInfoAttack","zIndex","position","bottom","padding","showInfoHeal","hiddenInfoHeal","showInfoEntrave","hiddenInfoEntrave","GameZone","stopAudio1","audio1","pause","playAudio1","location","volume","window","innerWidth","outerHeight","display","flexDirection","alignItems","justifyContent","src_components_Gride","MainMenu","Link","ChoicePlayers","choiceLuna","e","colorButtonHarry","colorButtonDrago","colorButtonLuna","colorButtonNorbert","showButtonLuna","choiceHarry","showButtonHarry","choiceDrago","showButtonDrago","choiceNorbert","showButtonNorbert","updatePseudoPlayer","target","value","createPlayer","userArray","playerTmp","keyPlayer","placeholderPseudo","playerOnePseudo","playerOneChoice","playerTwoPseudo","playerTwoChoice","playerThreePseudo","playerThreeChoice","playerFourPseudo","playerFourChoice","playersNumber","playersSelection","onChange","placeholder","id","marginTop","textDecoration","outline","href","fontSize","EndingGame","playerRanking","reverse","exact","App","BrowserRouter","Switch","Route","path","component","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","catch","error","ReactDOM","render","src_App_0","document","getElementById","URL","origin","addEventListener","concat","fetch","response","status","headers","get","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.d0edfdf2.chunk.js","sourcesContent":[" // Cell.jsx\n import React, {Component} from 'react';\n import './Cell.css';\n\n\n\n class Cell extends Component {\n   constructor(props) {\n     super(props)\n     //commentaire d'Ysa : Initialisation du state de la cell (Cela nous permet aussi de différencier les cases où l'on peut se déplacer et celles où l'on peut attaquer)\n     //commentaire d'Ysa : Ici j'indique pour le test que mes 2 joueurs occupent les cases 1/1 et 1/7 avec taken=true\n     this.state = {\n       taken: (props.x === 1 && (props.y === 1 || props.y === 7)) ? true : false,\n       // commentaire d'Anaële : création de l'état au click (au onMouseover) en true\n      \n     };\n   }\n   setClickPosition() {\n     if (this.props.isMovable) {\n       this.props.setPlayerPostion(this.props.x, this.props.y, 1)\n     }\n   }\n\n    // commentaire d'Anaële : création de la fonction qui active la cellule en fonction de l'état\n    // \n    handleMouveOver = () => {\n      console.log(\"YOUHYOUH\",this.props.isMovable) \n      if (this.props.isMovable){\n        // this.props.showCell(this.props.x, this.props.y)\n      }\n      \n    }\n    \n\n   // commentaire d'Ysa : création de la fonction qui récupère l'event du click\n   handleClick = () => {\n     console.log(this.props.x, this.props.y);\n   }\n\n   render() {\n\n     let color = \"rgba(0, 0, 0, 0.4)\"\n     if (this.props.isMovable) {\n       color = \"rgba(10, 126, 49, 0.72)\"\n     } else if (this.props.isAttackable) {\n       color = \"rgba(174, 0, 1, 0.72)\"\n     } else if (this.props.isHeal) {\n       color = 'rgba(160, 78, 0, 0.72'\n     } else if (this.props.isEntrave) {\n       color = 'rgba(136, 7, 129, 0.72'\n     }\n\n     return ( \n       <div className = \"Cell CellClick\"\n       onClick = {() => this.setClickPosition()}\n       onMouseOver = {() => this.handleMouveOver()}\n       style = {\n         {\n           top: this.props.x * 100,\n           left: this.props.y * 100,\n           backgroundColor: color\n         }\n       } >\n       </div>\n     );\n   }\n   // commentaires pour test github\n\n }\n\n\n export default Cell;","// Player.jsx\nimport React, { Component } from 'react';\nimport './Player.css';\n\nclass Player extends Component {\n  constructor(props) {\n    super(props)\n      this.state = {\n        infoPlayer: false,\n      }\n    this.avatarTmp = this.props.avatar\n  }\n\n  componentWillUpdate(nextProps) {\n    this.avatarTmp = this.goodImage(nextProps.pv)\n    this.soundTmp = this.goodSound(nextProps.pv)\n  }\n\n\n \n  showInfoPlayer() {\n    this.setState({\n      infoPlayer: true,\n    })\n  }\n\n  hiddenInfoPlayer() {\n    this.setState({\n      infoPlayer: false,\n    })\n  }\n\n  handleClick = () => {\n\n    if (this.props.isAttackable) {\n      this.props.playerAttacked(this.props.index, 50, 5)\n    }\n    if (this.props.isHeal) {\n      this.props.playerHeal(this.props.index, 25, 4)\n    }\n\n    if (this.props.isEntrave) {\n      this.props.playerEntrave(this.props.index, 15, 8, 2)\n    }\n  }\n\n  // Commentaire de Julie : affichage de l'avatar en fonction du state du player\n  goodImage = (nextPV) => {\n    let avatarTmp = this.props.avatar;\n    if (this.props.isCurrentPlayer) {\n      avatarTmp = this.props.avatarPlayer\n    }\n    if (this.props.pv <= 0) {\n      avatarTmp = this.props.avatarEnd\n    } else if (nextPV < this.props.pv) {\n      avatarTmp = this.props.avatarDamage\n    }\n    if (nextPV > this.props.pv) {\n      avatarTmp = this.props.avatarHeal\n    }\n    return avatarTmp\n  }\n\n  // changement de son en fonction du sort utilisé \n  goodSound = (nextPV) => {\n    if (nextPV < this.props.pv) {\n      const audio = new Audio();\n      audio.src = \"http://orteil.dashnet.org/cookieclicker/snd/cymbalCrash.mp3\";\n      audio.play();\n    }\n    if (nextPV > this.props.pv) {\n      const audio = new Audio();\n      audio.src = \"http://orteil.dashnet.org/cookieclicker/snd/spell.mp3\";\n      audio.play();\n    }   \n  }\nhandleSoundClick = () => {\n  return this.soundTmp\n}\n\n  render() {\n    const { x, y, pv } = this.props\n    return (\n      \n      <div className=\"Player\"\n        onClick={(event) => {\n        this.handleClick()\n        this.handleSoundClick()}} \n        onMouseOver={() => this.showInfoPlayer()} onMouseOut={() => this.hiddenInfoPlayer()}\n        style={{ top: x * 100, left: y * 100, backgroundImage: 'url(' + this.avatarTmp + ')' }}>\n        {this.state.infoPlayer ? <div className=\"infoPlayer\" style={{ color: 'white', fontWeight: 'bold', height: '20px', width: '50px', backgroundColor: 'Black', borderRadius: '3px', textAlign: 'center', margin: '-25px 29px' }}>{pv}</div> : null}\n      </div>\n\n    );\n  }\n\n}\n\n\nexport default Player;\n","// Gride.jsx\nimport React, { Component } from 'react';\nimport { Container, Row, Col } from 'reactstrap';\nimport './Gride.css';\nimport Cell from './Cell';\nimport Player from './Player';\nimport { Redirect } from 'react-router-dom'\n\nclass Gride extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      players: this.props.players,\n      playerNum: 2,\n      turnNum: 0,\n      currentPlayer: 0,\n      ndGame: false,\n      InfoAttack: false,\n      InfoHeal: false,\n      deathPlayers: [],\n\n\n      //Position des cells dites \"obstacles\" où le player ne peut pas se rendre\n\n      obstacle: [\n        \"key 00\",\n        \"key 01\",\n        \"key 02\",\n        \"key 07\",\n        \"key 08\",\n        \"key 09\",\n        \"key 010\",\n        \n        \"key 10\",\n        \"key 11\",\n        \"key 12\",\n        \"key 13\",\n        \"key 14\",\n        \"key 16\",\n        \"key 17\",\n        \"key 18\",\n        \"key 19\",\n        \"key 110\",\n\n        \"key 20\",\n        \"key 21\",\n        \"key 22\",\n        \"key 23\",\n        \"key 28\",\n        \"key 29\",\n\n        \"key 30\",\n        \"key 31\",\n        \"key 32\",\n        \"key 33\",\n        \"key 39\",\n        \n        \"key 40\",\n        \"key 41\",\n        \"key 42\",\n\n        \"key 50\",\n        \"key 51\",\n        \"key 52\",\n      ],\n\n      // Zone du déplacement\n      whiteZone: { minX: -1, maxX: -1, minY: -1, maxY: -1 },\n      // Zone des sorts      \n      whiteZoneAttack: { minX: -1, maxX: -1, minY: -1, maxY: -1 },\n      whiteZoneHeal: { minX: -1, maxX: -1, minY: -1, maxY: -1 },\n      whiteZoneEntrave: { minX: -1, maxX: -1, minY: -1, maxY: -1 },\n      //Compteur des tours des players\n      countDownTour: 540,\n    }\n    //Fin de this.state \n\n    setInterval(() => {\n      if (this.state.countDownTour === 0) {\n        this.setState({\n          countDownTour: 540,\n        })\n        this.nextPlayer()\n      } else\n        this.setState({\n          countDownTour: this.state.countDownTour - 10\n        })\n    }, 500)\n  }\n  //Fin des objets de la class\n\n  //-------------------------------Function Déplacement------------------------------//\n  componentDidMount() {\n    this.setState({\n      whiteZone: this.setWhiteZone(this.state.players[this.state.currentPlayer])\n    })\n  }\n  //Fonction qui défini la zone de déplacement du currentPlayer\n  setWhiteZone(player) {\n\n    return {\n      minX: player.x - 1,\n      maxX: player.x + 1,\n      minY: player.y - 1,\n      maxY: player.y + 1,\n    }\n  }\n\n  //Fonction qui permet de vérifier que la cell ou on souhaite ce déplacer fais parti de la whithZone du currentPlayer\n\n  isWhiteZone = (x, y) => {\n    let cell = 'key ' + x + y\n    // console.log(cell)\n    // console.log(this.state.obstacle)\n\n    if (this.state.obstacle.indexOf(cell) !== -1)\n      return false\n    if ((x >= this.state.whiteZone.minX && x <= this.state.whiteZone.maxX)\n      && (y >= this.state.whiteZone.minY && y <= this.state.whiteZone.maxY)) {\n      return true\n    }\n    else {\n      return false\n    }\n  }\n\n  //Fonction qui déclenche le déplacement au moyen du clic de la souris et affiche la zone verte du déplacement tous en désactivant les autres zones (spell) si ils sont activé\n\n  handleMoveClick = () => {\n    this.setState({\n      whiteZone: this.setWhiteZone(this.state.players[this.state.currentPlayer]),\n      whiteZoneHeal: {\n        minX: -1,\n        maxX: -1,\n        minY: -1,\n        maxY: -1,\n      },\n      whiteZoneEntrave: {\n        minX: -1,\n        maxX: -1,\n        minY: -1,\n        maxY: -1,\n      },\n      whiteZoneAttack: {\n        minX: -1,\n        maxX: -1,\n        minY: -1,\n        maxY: -1,\n      },\n    }\n    )\n  }\n\n  //-------------------------------Fin de Déplacement------------------------------//\n\n  //-------------------------------Sort-------------------------------------------//\n\n  handleAttackClick = () => {\n    this.setWhiteZoneAttack();\n    this.setState({\n      whiteZone: {\n        minX: -1,\n        maxX: -1,\n        minY: -1,\n        maxY: -1,\n      },\n      whiteZoneHeal: {\n        minX: -1,\n        maxX: -1,\n        minY: -1,\n        maxY: -1,\n      },\n      whiteZoneEntrave: {\n        minX: -1,\n        maxX: -1,\n        minY: -1,\n        maxY: -1,\n      },\n\n\n    })\n  }\n\n  handleHealClick = () => {\n    this.setWhiteZoneHeal();\n    this.setState({\n      whiteZone: {\n        minX: -1,\n        maxX: -1,\n        minY: -1,\n        maxY: -1,\n      },\n      whiteZoneAttack: {\n        minX: -1,\n        maxX: -1,\n        minY: -1,\n        maxY: -1,\n      },\n      whiteZoneEntrave: {\n        minX: -1,\n        maxX: -1,\n        minY: -1,\n        maxY: -1,\n      },\n\n    })\n  }\n\n  handleEntraveClick = () => {\n    \n    this.setWhiteZoneEntrave();\n    this.setState({\n\n      whiteZone: {\n        minX: -1,\n        maxX: -1,\n        minY: -1,\n        maxY: -1,\n      },\n      whiteZoneAttack: {\n        minX: -1,\n        maxX: -1,\n        minY: -1,\n        maxY: -1,\n      },\n      whiteZoneHeal: {\n        minX: -1,\n        maxX: -1,\n        minY: -1,\n        maxY: -1,\n      },\n\n    })\n  }\n\n  showInfoAttack() {\n    this.setState({\n      InfoAttack: true,\n    })\n  }\n\n  hiddenInfoAttack() {\n    this.setState({\n      InfoAttack: false,\n    })\n  }\n\n  showInfoHeal() {\n    this.setState({\n      InfoHeal: true,\n    })\n  }\n\n  hiddenInfoHeal() {\n    this.setState({\n      InfoHeal: false,\n    })\n  }\n\n  showInfoEntrave() {\n    this.setState({\n      InfoEntrave: true,\n    })\n  }\n\n  hiddenInfoEntrave() {\n    this.setState({\n      InfoEntrave: false,\n    })\n  }\n\n  checkVictory = (playersArray) => {\n    console.log(\"someone is dead !\");\n    let playersAlive = playersArray.filter((player) => (player.isDead === false))\n    console.log(\"these players are alive : \", playersAlive);\n    if (playersAlive.length === 1) {\n      console.log(\"a player won !\");\n      this.setState({\n        ...this.state,\n        showEndGame: true\n      })\n    }\n  }\n\n  nextPlayer = () => {\n    const playersTmp = this.state.players\n    playersTmp[this.state.currentPlayer].pa = 10\n    playersTmp[this.state.currentPlayer].pm = 3\n\n    let nbPlayersToSkip = 1\n    while (playersTmp[(this.state.currentPlayer + nbPlayersToSkip) % this.state.players.length].isDead) {\n      nbPlayersToSkip += 1\n    }\n    const indexNPlus1 = (this.state.currentPlayer + nbPlayersToSkip) % this.state.players.length\n    this.setState({\n      turnNum: this.state.turnNum + 1,\n      currentPlayer: indexNPlus1,\n      countDownTour: 540,\n      players: playersTmp,\n      whiteZone: this.setWhiteZone(this.state.players[indexNPlus1]),\n      whiteZoneAttack: {\n        minX: -1,\n        maxX: -1,\n        minY: -1,\n        maxY: -1,\n      },\n\n      whiteZoneHeal: {\n        minX: -1,\n        maxX: -1,\n        minY: -1,\n        maxY: -1,\n      },\n      whiteZoneEntrave: {\n        minX: -1,\n        maxX: -1,\n        minY: -1,\n        maxY: -1,\n      }\n\n\n    });\n  }\n\n  setWhiteZoneHeal = () => {\n    let playersTmp = this.state.players[this.state.currentPlayer]\n    const whiteZoneHeal = {\n      minX: playersTmp.x - 0,\n      maxX: playersTmp.x + 0,\n      minY: playersTmp.y - 0,\n      maxY: playersTmp.y + 0,\n    }\n    this.setState({\n      whiteZoneHeal\n    })\n  }\n\n  setWhiteZoneAttack = () => {\n    let playersTmp = this.state.players[this.state.currentPlayer]\n    const whiteZoneAttack = {\n      minX: playersTmp.x - 2,\n      maxX: playersTmp.x + 2,\n      minY: playersTmp.y - 2,\n      maxY: playersTmp.y + 2,\n    }\n    this.setState({\n      whiteZoneAttack\n    })\n  }\n\n  setWhiteZoneEntrave = () => {\n    let playersTmp = this.state.players[this.state.currentPlayer]\n    const whiteZoneEntrave = {\n      minX: playersTmp.x - 0,\n      maxX: playersTmp.x + 0,\n      minY: playersTmp.y - 4,\n      maxY: playersTmp.y + 4,\n    }\n    this.setState({\n      whiteZoneEntrave\n    })\n  }\n\n  isWhiteZoneAttack = (x, y) => {\n\n\n    if ((x >= this.state.whiteZoneAttack.minX && x <= this.state.whiteZoneAttack.maxX)\n      && (y >= this.state.whiteZoneAttack.minY && y <= this.state.whiteZoneAttack.maxY))\n      return true\n    else\n      return false\n  }\n  isWhiteZoneHeal = (x, y) => {\n    if ((x >= this.state.whiteZoneHeal.minX && x <= this.state.whiteZoneHeal.maxX)\n      && (y >= this.state.whiteZoneHeal.minY && y <= this.state.whiteZoneHeal.maxY))\n      return true\n    else\n      return false\n  }\n  isWhiteZoneEntrave = (x, y) => {\n    if ((x >= this.state.whiteZoneEntrave.minX && x <= this.state.whiteZoneEntrave.maxX)\n      && (y >= this.state.whiteZoneEntrave.minY && y <= this.state.whiteZoneEntrave.maxY))\n      return true\n    else\n      return false\n  }\n\n  playerAttacked = (index, damage, usePa) => {\n\n    if (this.state.players[this.state.currentPlayer].pa < 5) return;\n\n    if (this.state.currentPlayer === index) {\n      return\n    }\n\n    let playersTmp = this.state.players;\n    let deathPlayersTmp = this.state.deathPlayers;\n    playersTmp[index].pv -= damage;\n    if (playersTmp[index].pv <= 0) {\n      playersTmp[index].isDead = true;\n      this.checkVictory(playersTmp)\n      deathPlayersTmp.push(playersTmp[index].name)\n\n    }\n\n    this.state.players[this.state.currentPlayer].pa -= usePa;\n\n    if (playersTmp)\n      this.setState({\n        deathPlayers: deathPlayersTmp,\n        players: playersTmp\n      });\n    this.setState({\n      whiteZoneAttack: {\n        minX: -1,\n        maxX: -1,\n        minY: -1,\n        maxY: -1,\n      }\n    })\n\n  }\n  playerEntrave = (index, damage, usePa, entrave) => {\n\n    console.log('r')\n\n    if (this.state.players[this.state.currentPlayer].pa < 8) return\n\n    if (this.state.currentPlayer === index) {\n      return\n    }\n\n    let playersTmp = this.state.players;\n    let deathPlayersTmp = this.state.deathPlayers;\n    playersTmp[index].pv -= damage\n    playersTmp[index].pa -= entrave\n    if (playersTmp[index].pv <= 0) {\n      playersTmp[index].isDead = true;\n      this.checkVictory(playersTmp)\n      deathPlayersTmp.push(playersTmp[index].name)\n    }\n\n    this.state.players[this.state.currentPlayer].pa -= usePa\n\n    this.setState({\n      ...this.state,\n      players: playersTmp,\n      deathPlayers: deathPlayersTmp\n\n    });\n    this.setState({\n      whiteZoneEntrave: {\n        minX: -1,\n        maxX: -1,\n        minY: -1,\n        maxY: -1,\n      }\n    })\n\n  }\n\n  playerHeal = (index, heal, usePa) => {\n\n    if (this.state.players[this.state.currentPlayer].pa < 4) return\n\n    let playersTmp = this.state.players;\n    playersTmp[index].pv += heal\n    this.state.players[this.state.currentPlayer].pa -= usePa\n\n    this.setState({\n      ...this.state,\n      players: playersTmp,\n\n    });\n    this.setState({\n      whiteZoneHeal: {\n        minX: -1,\n        maxX: -1,\n        minY: -1,\n        maxY: -1,\n      }\n\n    })\n\n  }\n\n  setPlayerPostion = (x, y, useMove) => {\n\n    if (this.state.players[this.state.currentPlayer].pm < 1) return\n\n    let playersTmp = this.state.players;\n    playersTmp[this.state.currentPlayer].x = x\n    playersTmp[this.state.currentPlayer].y = y\n    playersTmp[this.state.currentPlayer].pm = playersTmp[this.state.currentPlayer].pm - useMove\n    this.setState({\n      whiteZone: this.setWhiteZone(playersTmp[this.state.currentPlayer]),\n      players: playersTmp\n    })\n\n  }\n  createGrid(gridrow, gridcol) {\n    let arr = []\n    for (let i = 0; i < gridrow; i++) {\n      for (let j = 0; j < gridcol; j++) {\n        arr.push(<Cell key={\"key \" + i + \" \" + j} y={j} x={i} setPlayerPostion={this.setPlayerPostion} isMovable={this.isWhiteZone(i, j)} isAttackable={this.isWhiteZoneAttack(i, j)} isHeal={this.isWhiteZoneHeal(i, j)} isEntrave={this.isWhiteZoneEntrave(i, j)} />)\n      }\n    }\n\n    return arr\n  }\n\n  render() {\n\n    if (this.state.showEndGame) {\n      return <Redirect push to={{\n        pathname: process.env.PUBLIC_URL + '/EndingGame',\n        state: {\n          winner: this.state.players[this.state.currentPlayer],\n          deathPlayers: this.state.deathPlayers\n        }\n      }} />\n    }\n\n    const { players, } = this.state\n\n    return (\n      \n      <div className=\"Gride\">\n\n        {\n          this.createGrid(6, 13)\n        }\n\n        {\n          players.map(\n            (player, index) => {\n              if (player.isDead === false) {\n                return <Player index={index}\n                  x={player.x} y={player.y}\n                  avatar={player.avatar}\n                  avatarPlayer={player.avatarPlayer}\n                  avatarDamage={player.avatarDamage}\n                  avatarHeal={player.avatarHeal}\n                  avatarEnd={player.avatarEnd}\n                  isCurrentPlayer={index === this.state.currentPlayer}\n                  pv={player.pv}\n                  isAttackable={this.isWhiteZoneAttack(player.x, player.y)}\n                  isHeal={this.isWhiteZoneHeal(player.x, player.y)}\n                  isEntrave={this.isWhiteZoneEntrave(player.x, player.y)}\n                  playerAttacked={this.playerAttacked}\n                  playerHeal={this.playerHeal}\n                  playerEntrave={this.playerEntrave}\n                  pa={player.pa}\n                />\n              }\n              else { return }\n            }\n          )\n        }\n        <div className='menus'>\n        \n       \n        <Container className='infoPlayer'>\n        <Col><img className='blason' src={this.state.players[this.state.currentPlayer].houseBanner} alt={this.state.players[this.state.currentPlayer].name}></img></Col>\n        <Col><div className='pseudoPlayer'>{this.state.players[this.state.currentPlayer].pseudoPlayer}</div></Col>\n        </Container>\n\n        <Container className='infoPointsPlayers'>\n        <Row>\n        <Col ><div className='healtBarre'>{this.state.players[this.state.currentPlayer].pv} PV</div></Col>\n        </Row>\n        <Row>\n          <Col sm={{ size: 'auto', offset: 0 }}><div className='pa'>{this.state.players[this.state.currentPlayer].pa} PA</div></Col>\n          <Col sm={{ size: 'auto', offset: 0 }}><div className='pm'>{this.state.players[this.state.currentPlayer].pm} PM</div></Col>\n        </Row>\n        </Container>\n\n        <Container className='movePlayer'>\n        <Col><div className='buttonMove' onClick={() => this.handleMoveClick()} >Move (-1PM)</div></Col>\n        </Container>\n\n        <Container className='spellPlayer'>\n        <Row>\n          <Col sm={{ size: 'auto', offset: 0 }}><div className=\"attack\" onClick={() => this.handleAttackClick()} onMouseOver={() => this.showInfoAttack()} onMouseOut={() => this.hiddenInfoAttack()} >Boule de feu<br />(-5PA)</div>\n      {this.state.InfoAttack ? <div className=\"infoAttack\" style={{ color: 'black', fontWeight: 'bold', height: '50Opx', width: '350px', backgroundColor: 'rgba(255,255,255,0.7)', borderRadius: '3px', textAlign: 'center', zIndex: '50', position: 'fixed', bottom: '15vh', left: '50vw', padding: '10px' }}>L'adversaire perd 50 points de vie.<br /><br />Portée : Zone Rouge<br />Coût : 5 points d'action.</div> : null}</Col>\n          <Col sm={{ size: 'auto', offset: 0 }}><div className=\"heal\" onClick={() => this.handleHealClick()} onMouseOver={() => this.showInfoHeal()} onMouseOut={() => this.hiddenInfoHeal()}>Soin<br />(-4PA)</div>\n      {this.state.InfoHeal ? <div className=\"infoAttack\" style={{ color: 'black', fontWeight: 'bold', height: '50Opx', width: '400px', backgroundColor: 'rgba(255,255,255,0.7)', borderRadius: '3px', textAlign: 'center', zIndex: '50', position: 'fixed', bottom: '15vh', left: '50vw', padding: '10px' }}>Le joueur ciblé gagne 25 points de vie.<br /><br />Portée : Zone Orange<br />Coût : 4 points d'action.</div> : null}</Col>\n          <Col sm={{ size: 'auto', offset: 0 }}><div className=\"entrave\" onClick={() => this.handleEntraveClick()} onMouseOver={() => this.showInfoEntrave()} onMouseOut={() => this.hiddenInfoEntrave()}>Entrave<br />(-8PA)</div>\n      {this.state.InfoEntrave ? <div className=\"infoAttack\" style={{ color: 'black', fontWeight: 'bold', height: '50Opx', width: '450px', backgroundColor: 'rgba(255,255,255,0.7)', borderRadius: '3px', textAlign: 'center', zIndex: '50', position: 'fixed', bottom: '15vh', left: '50vw', padding: '10px' }}>L'adversaire perd 15 points de vie <br />et 2 points d'action à son prochain tour.<br /><br />Portée : Zone Violette<br />Coût : 8 points d'action.</div> : null}</Col>\n        </Row>\n        <br/>\n        <Row>\n          <Col>\n          <div style={{ width: this.state.countDownTour, height: '30px', backgroundColor: 'cornsilk',  zIndex: '10',position: 'fixed', borderRadius: '10px' }}></div>\n          <div style={{ width: '540px', height: '30px', backgroundColor: '#201e1e', zIndex: '0',position: 'fixed', borderRadius: '10px' }}></div>\n          </Col>\n        </Row>\n\n        </Container>\n\n        <Container className='endPlay'>\n        <Col><div className=\"ButtonNextPlayers\" onClick={() => this.nextPlayer()}>End Of Turn</div></Col>\n        </Container>\n    \n        </div>\n\n      </div>\n\n    );\n  }\n}\n\nexport default Gride;","//GameZone.jsx\nimport React, { Component } from 'react';\nimport Gride from './Gride';\nimport './GameZone.css';\n\nclass GameZone extends Component {\n\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      players: this.props.location.state.players,\n    }\n    this.audio1 = new Audio();\n  }\n\n  componentDidMount() {\n\n    this.audio1.src = \"https://ia800805.us.archive.org/4/items/11TheQuidditchMatch/2001%20-%20Harry%20Potter%20and%20The%20Sorcerer%27s%20Stone/08%20-%20Mr.%20Longbottom%20Flies.mp3\";\n    this.audio1.volume = '0.9';\n    this.audio1.play();\n  };\n\n  stopAudio1 = () => {\n    this.audio1.pause();\n  };\n  playAudio1 = () => {\n    this.audio1.play()\n  }\n\n\n  render() {\n    return (\n      <div className=\"App\" style={{ width: window.innerWidth + 'px', height: window.outerHeight + 'px', display: 'flex', flexDirection: 'column', alignItems: 'center', justifyContent: 'center' }}>\n        <header className=\"App-header\">\n         <button className=\"buttonSound\" onClick={()=>this.playAudio1()}>play audio</button>\n         <button className=\"buttonSoundStop\" onClick={()=>this.stopAudio1()}>stop audio</button>\n        </header>\n        <Gride players={this.state.players} />\n        <br />\n      </div>\n    );\n  }\n}\n\nexport default GameZone;\n","//App.jsx\nimport { Container, Row,  } from 'reactstrap';\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport './MainMenu.css';\n\nclass MainMenu extends Component {\n\n  componentDidMount(){\n    const audio = new Audio();\n    audio.src = \"https://ia800805.us.archive.org/4/items/11TheQuidditchMatch/2001%20-%20Harry%20Potter%20and%20The%20Sorcerer%27s%20Stone/02%20-%20Harry%27s%20Wondrous%20World.mp3\";\n    audio.volume = '0.5';\n    audio.play()\n  };\n       stopAudio(){\n         this.audio.pause();\n\n       };\n\n  render() {\n    return (\n\n        <div className='fond'>\n          <Container className='wrapper'>\n            <Row className='line'>Spells Duel</Row>\n            <Row className='line'>\n              <Link className='lien' onClick='this.stopAudio()'  to={process.env.PUBLIC_URL + '/ChoicePlayers'}> New Game </Link>\n            </Row>\n          </Container> \n        </div>\n    );\n  }\n}\n\nexport default MainMenu;","import React, { Component } from 'react'\nimport './ChoicePlayers.css';\nimport { Link } from 'react-router-dom';\nimport { Container, Row, Col } from 'reactstrap';\nimport { Card, CardImg, CardText, CardBody, CardTitle, Button } from 'reactstrap';\n\nclass ChoicePlayers extends Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            playerOneChoice: \"\",\n            playerTwoChoice: \"\",\n            playerThreeChoice: \"\",\n            playerFourChoice: \"\",\n\n            playerOnePseudo: \"\",\n            playerTwoPseudo: \"\",\n            playerThreePseudo: \"\",\n            playerFourPseudo: \"\",\n\n            placeholderPseudo: \"\",\n            showButtonHarry: true,\n            showButtonNorbert: true,\n            showButtonLuna: true,\n            showButtonDrago: true,\n            players: [\n\n            ],\n\n            player: {\n                name: '',\n                avatar: '',\n                avatarDamage: '',\n                avatarHeal: '',\n                avatarEnd: '',\n                houseBanner: '',\n                x: -1,\n                y: -1,\n                pv: 100,\n                pa: 10,\n                pm: 3,\n                keyPlayer: 1,\n                pseudoPlayer: '',\n\n            },\n\n            playersNumber: true,\n            colorButtonHarry: 'white',\n            colorButtonDrago: 'white',\n            colorButtonLuna: 'white',\n            colorButtonNorbert: 'white',\n\n            playersSelection: [],\n        }\n    }\n\n\n\n\n    choiceLuna = (e) => {\n        this.setState({\n            player: {\n                ...this.state.player,\n                name: this.state.name = 'Luna',\n                //Les différents avatars en fonctionde l'action\n                avatar: this.state.avatar = 'https://img.lght.pics/2mpJ.png',\n                avatarPlayer: 'https://i.postimg.cc/sDL0vXJz/LunaP.png',\n                avatarDamage: this.state.avatarDamage = 'https://i.postimg.cc/G2T9f4Nw/explo2.gif',\n                avatarHeal: this.state.avatarHeal = 'https://i.postimg.cc/tJzHKpcq/LunaHeal.png',\n                avatarEnd: this.state.avatarEnd = 'https://i.postimg.cc/52wHycpc/explosion.png',\n                houseBanner: this.state.houseBanner = 'https://img.lght.pics/2mhN.md.png',\n                //Si le joueur est mort ou pas\n                isDead: false,\n                x: this.state.x = 3,\n                y: this.state.y = 11,\n                pv: this.state.pv = 100,\n                pa: this.state.pa = 10,\n                pm: this.state.pm = 3,\n\n            },\n            colorButtonHarry: this.colorButtonHarry = 'white',\n            colorButtonDrago: this.colorButtonDrago = 'white',\n            colorButtonLuna: this.colorButtonLuna = '#9b1515',\n            colorButtonNorbert: this.colorButtonNorbert = 'white',\n            showButtonLuna: false\n\n        })\n\n    }\n\n\n\n    choiceHarry = (e) => {\n        this.setState({\n            player: {\n                ...this.state.player,\n                name: this.state.name = 'Harry',\n                //Les différents avatars en fonctionde l'action\n                avatar: this.state.avatar = 'https://img.lght.pics/2TqC.png',\n                avatarPlayer: 'https://i.postimg.cc/NjzYGBK2/harryP.png',\n                avatarDamage: this.state.avatarDamage = 'https://i.postimg.cc/G2T9f4Nw/explo2.gif',\n                avatarHeal: this.state.avatarHeal = 'https://i.postimg.cc/K88Zy3Fd/harry-Heal.png',\n                avatarEnd: this.state.avatarEnd = 'https://i.postimg.cc/52wHycpc/explosion.png',\n                houseBanner: this.state.houseBanner = 'https://img.lght.pics/2mTV.png',\n                //Si le joueur est mort ou pas\n                isDead: false,\n                x: this.state.x = 5,\n                y: this.state.y = 3,\n                pv: this.state.pv = 300,\n                pa: this.state.pa = 10,\n                pm: this.state.pm = 5,\n\n            },\n            colorButtonHarry: this.colorButtonHarry = '#9b1515',\n            colorButtonDrago: this.colorButtonDrago = 'white',\n            colorButtonLuna: this.colorButtonLuna = 'white',\n            colorButtonNorbert: this.colorButtonNorbert = 'white',\n            showButtonHarry: false\n        })\n\n    }\n\n\n\n\n    choiceDrago = (e) => {\n        this.setState({\n            player: {\n                ...this.state.player,\n                name: this.state.name = 'Drago',\n                //Les différents avatars en fonctionde l'action\n                avatar: this.state.avatar = 'https://img.lght.pics/235X.png',\n                avatarPlayer: 'https://i.postimg.cc/W4XchVYP/DragoP.png',\n                avatarDamage: this.state.avatarDamage = 'https://i.postimg.cc/G2T9f4Nw/explo2.gif',\n                avatarHeal: this.state.avatarHeal = 'https://i.postimg.cc/N0LfR9z1/Drago-Heal.png',\n                avatarEnd: this.state.avatarEnd = 'https://i.postimg.cc/52wHycpc/explosion.png',\n                houseBanner: this.state.houseBanner = 'https://img.lght.pics/2mTc.png',\n                //Si le joueur est mort ou pas\n                isDead: false,\n                x: this.state.x = 5,\n                y: this.state.y = 8,\n                pv: this.state.pv = 100,\n                pa: this.state.pa = 10,\n                pm: this.state.pm = 3,\n\n            },\n            colorButtonHarry: this.colorButtonHarry = 'white',\n            colorButtonDrago: this.colorButtonDrago = '#9b1515',\n            colorButtonLuna: this.colorButtonLuna = 'white',\n            colorButtonNorbert: this.colorButtonNorbert = 'white',\n            showButtonDrago: false,\n        })\n\n    }\n\n\n\n    choiceNorbert = (e) => {\n        this.setState({\n            player: {\n                ...this.state.player,\n                name: this.state.name = 'Norbert',\n                //Les différents avatars en fonctionde l'action\n                avatar: this.state.avatar = 'https://img.lght.pics/2mhU.png',\n                avatarPlayer: 'https://i.postimg.cc/kgxFqX1f/NorbertP.png',\n                avatarDamage: this.state.avatarDamage = 'https://i.postimg.cc/G2T9f4Nw/explo2.gif',\n                avatarHeal: this.state.avatarHeal = 'https://i.postimg.cc/TPWvRrsH/Norbert-Heal.png',\n                avatarEnd: this.state.avatarEnd = 'https://i.postimg.cc/52wHycpc/explosion.png',\n                houseBanner: this.state.houseBanner = 'https://img.lght.pics/2mh0.md.png',\n                //Si le joueur est mort ou pas\n                isDead: false,\n                x: this.state.x = 0,\n                y: this.state.y = 5,\n                pv: this.state.pv = 100,\n                pa: this.state.pa = 10,\n                pm: this.state.pm = 3,\n\n            },\n            colorButtonHarry: this.colorButtonHarry = 'white',\n            colorButtonDrago: this.colorButtonDrago = 'white',\n            colorButtonLuna: this.colorButtonLuna = 'white',\n            colorButtonNorbert: this.colorButtonNorbert = '#9b1515',\n            showButtonNorbert: false\n        })\n\n    }\n\n\n\n\n    //-----------------Fonction qui enregistre en state le pseudo du joueur----------------------//\n    updatePseudoPlayer = (e) => {\n\n        this.setState({\n            player: {\n                ...this.state.player,\n                pseudoPlayer: e.target.value\n            }\n        })\n    }\n\n    //------------- Crée un objet user avec les informations fournie par le player et change la keyPlayer----------//\n\n    createPlayer = () => {\n\n        let userArray = this.state.players;\n        let playerTmp = this.state.player;\n\n\n        if (this.state.player.keyPlayer <= 4 && this.state.player.pseudoPlayer !== \"\") {\n            this.setState({\n                player: {\n                    ...this.state.player,\n                    keyPlayer: this.state.player.keyPlayer + 1\n                }\n            })\n\n            userArray.push(playerTmp)\n      \n            this.setState({\n                player: {\n                    ...this.state.player,\n                    pseudoPlayer: \"\"\n                },\n                placeholderPseudo: \"\",\n                // playerOnePseudo : this.state.players.pseudoPlayer\n            })\n\n            if (this.state.playerOnePseudo === \"\"){\n                this.setState({\n                    playerOnePseudo: this.state.players[this.state.players.length-1].pseudoPlayer,\n                    playerOneChoice: this.state.players[this.state.players.length-1].name\n                })\n            return}\n            else if (this.state.playerTwoPseudo === \"\") {\n                this.setState({\n                    playerTwoPseudo: this.state.players[this.state.players.length-1].pseudoPlayer,\n                    playerTwoChoice: this.state.players[this.state.players.length-1].name\n                })\n            return \n            }\n            else if (this.state.playerThreePseudo === \"\") {\n                this.setState({\n                    playerThreePseudo: this.state.players[this.state.players.length-1].pseudoPlayer,\n                    playerThreeChoice: this.state.players[this.state.players.length-1].name\n                })\n            return \n            }\n            else if (this.state.playerFourPseudo === \"\") {\n                this.setState({\n                    playerFourPseudo: this.state.players[this.state.players.length-1].pseudoPlayer,\n                    playerFourChoice: this.state.players[this.state.players.length-1].name\n                })\n            return \n            }\n            \n\n        \n\n\n            console.log(\"jesuisici\" , this.state.players[this.state.players.length-1].name)\n            console.log(this.state.players[this.state.players.length-1].pseudoPlayer)\n\n        }\n        else {\n            this.setState({\n                placeholderPseudo: \"Merci de rentrer votre pseudo\"\n            })\n        }\n    }\n\n    render() {\n        return (\n            <div className='ChoicePlayers' style={{ width: window.innerWidth + 'px', height: window.outerHeight + 'px', display: 'flex', flexDirection: 'column', alignItems: 'center', justifyContent: 'center' }} >\n            <Container className='menusValidation1'>\n                   <Row>\n                   <Col> {this.state.playerOnePseudo}: {this.state.playerOneChoice} </Col> \n                   <Col>{this.state.playerTwoPseudo}: {this.state.playerTwoChoice}</Col>\n                   <Col>{this.state.playerThreePseudo}: {this.state.playerThreeChoice}</Col>\n                   <Col>{this.state.playerFourPseudo}: {this.state.playerFourChoice}</Col>\n                   </Row>\n                   </Container>\n                <Container className='boulet'>\n                    <br />\n                    <Row>\n                        <Col sm={{ size: '3', offset: 0 }}>\n                            <Card>\n                                <CardImg top width=\"100%\" src=\"http://image.noelshack.com/fichiers/2018/45/3/1541598978-harryaccueil.jpg\" alt=\"Card image cap\" />\n                                <CardBody>\n                                    <CardTitle>Harry Potter</CardTitle>\n                                    <CardText>Harry est assez timide et plutôt modeste. Il reconnaît très volontiers la difficulté, voire l'incapacité, d'affronter ses peurs et son principal ennemi sans l'aide précieuse de ses amis</CardText>\n                                    {this.state.showButtonHarry ? <Button onClick={() => this.choiceHarry()}>Choisir</Button> : null}\n                                </CardBody>\n                            </Card>\n                        </Col>\n                        <Col sm={{ size: '3', offset: 0 }}>\n                            <Card>\n                                <CardImg top width=\"100%\" src=\"http://image.noelshack.com/fichiers/2018/45/3/1541598971-dragoaccueil.jpg\" alt=\"Card image cap\" />\n                                <CardBody>\n                                    <CardTitle>Drago Malfoy</CardTitle>\n                                    <CardText>Drago est très prétentieux et se moque de toute personne n'étant pas de son avis ou de sa condition. Il est convaincu de la supériorité des sorciers de sang pur et voue une grande admiration à son père.</CardText>\n                                    {this.state.showButtonDrago ? <Button onClick={() => this.choiceDrago()}>Choisir</Button> : null}\n                                </CardBody>\n                            </Card>\n                        </Col>\n                        <Col sm={{ size: '3', offset: 0 }}>\n                            <Card>\n                                <CardImg top width=\"100%\" src=\"http://image.noelshack.com/fichiers/2018/45/3/1541600752-norbertaccueil.jpg\" alt=\"Card image cap\" />\n                                <CardBody>\n                                    <CardTitle>Norbert Dragonneau</CardTitle>\n                                    <CardText>Norbert est un sorcier excentrique passionné de magizoologie qui se sent plus à l'aise lorsqu'il est entouré d'animaux. C'est un homme d'action qui préfère travailler sur le terrain.</CardText>\n                                    {this.state.showButtonNorbert ? <Button onClick={() => this.choiceNorbert()}>Choisir</Button> : null}\n                                </CardBody>\n                            </Card>\n                        </Col>\n                        <Col sm={{ size: '3', offset: 0 }}>\n                            <Card>\n                                <CardImg top width=\"100%\" src=\"http://image.noelshack.com/fichiers/2018/45/3/1541598964-lunaaccueil.jpg\" alt=\"Card image cap\" />\n                                <CardBody>\n                                    <CardTitle>Luna Lovegood</CardTitle>\n                                    <CardText>Luna est la fille de Xenophilius, le rédacteur en chef du Chicaneur. Excentrique et tête en l’air, les autres sorciers la trouvent étrange. Elle n’en est pas moins une alliée précieuse pour Harry et ses amis.</CardText>\n                                    {this.state.showButtonLuna ? <Button onClick={() => this.choiceLuna()}>Choisir</Button> : null}\n                                </CardBody>\n                            </Card>\n                        </Col>\n                    </Row>\n                    <br />\n                    </Container>\n                    \n                    \n                    <Container className='menusValidation'>\n                    <Row style={{ alignItems: 'center' }}>\n                        <Col className='Pseudo' sm={{ size: '5', offset: 1 }} >Pseudo : <input style={{ borderRadius:'20px' ,textAlign: 'center', color: 'black', }} value={this.state.player.pseudoPlayer} onChange={this.updatePseudoPlayer} placeholder={this.state.placeholderPseudo} name='pseudo' id='pseudo' ></input></Col>\n                        <Col sm={{ size: '5', offset: 0 }}><div onClick={() => this.createPlayer()} className='ValiderMonChoix'>Valider mon choix</div></Col>\n                    </Row>\n                    \n                    <Row style={{ alignItems: 'center',marginTop:'15px', textDecoration:'none important', outline:'none !important' }}>\n                        <Col sm={{ size: '3', offset: 3 }}>{this.state.players.length >= 2 ? (<div><Link className='cursor' to={{ pathname: process.env.PUBLIC_URL + '/GameZone', state: { players: this.state.players } }} >Lancer la partie</Link></div>) : null}</Col>\n                        <Col sm={{ size: '3', offset: 1 }}><a className='cursor2' href= {process.env.PUBLIC_URL + '/ChoicePlayers'} style={{ color: 'white', textDecoration: 'none', fontSize: '15px' }}>Reset les choix</a></Col>\n                     </Row>\n                   </Container>\n                   <br/>\n                   \n            </div>\n        );\n\n    }\n}\n\n\nexport default ChoicePlayers;","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport './EndingGame.css';\n\n\nclass EndingGame extends Component {\n    constructor(props) {\n        super(props)\n        this.winner = this.props.location.state.winner;\n        this.deathPlayers = this.props.location.state.deathPlayers;\n        this.playerRanking = [];\n    }\n\n\n    render() {\n        //Classement des Players et inversion du tableau deathPlayers\n        this.playerRanking = this.deathPlayers.reverse()\n\n        return (\n            <div className=\"victory\">\n                <div className=\"ranking\">\n                    <h1 className=\"first\">1. {this.winner.name}, you win !</h1>\n                    <br/>\n                    <h1 className=\"second\">2. {this.playerRanking[0]}</h1>\n                    <br/>\n                    <h1 className=\"third\">3. {this.playerRanking[1]}</h1>\n                    <br/>\n                    <h1 className=\"fourth\">4. {this.playerRanking[2]}</h1>\n                </div>\n                <div className=\"buttonLink\">\n                    <Link style={{outline:'none !important', textDecoration:'none'}}exact to= {process.env.PUBLIC_URL + '/'}>\n                        <div className=\"button-EG\">\n                            New Game\n                        </div>\n                    </Link>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default EndingGame","//App.jsx\nimport React, { Component } from 'react';\nimport { Route, BrowserRouter, Switch, } from 'react-router-dom';\nimport './App.css';\nimport GameZone from './components/GameZone';\nimport MainMenu from './components/MainMenu';\nimport ChoicePlayers from './components/ChoicePlayers';\nimport EndingGame from './components/EndingGame';\n\n\nclass App extends Component {\n  render() {\n    return (\n      <BrowserRouter>\n      <Switch>\n      <Route exact path= {process.env.PUBLIC_URL + '/'} component = {MainMenu} />\n      <Route exact path= {process.env.PUBLIC_URL + '/ChoicePlayers'} component = {ChoicePlayers}/>\n      <Route exact path= {process.env.PUBLIC_URL + '/GameZone'} component = {GameZone} />\n      <Route exact path= {process.env.PUBLIC_URL + '/EndingGame'} component = {EndingGame}/>\n      </Switch>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\nimport 'bootstrap/dist/css/bootstrap.css';\n\n\n\nReactDOM.render(<App />, document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}